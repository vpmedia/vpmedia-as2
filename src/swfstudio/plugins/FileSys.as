intrinsic class swfstudio.plugins.FileSys
{
	public function specialFolder(params:Object,callback:Object,errorCallback:Object):Object;
	public function copyFileWithFeedback(params:Object,callback:Object,errorCallback:Object):Object;
	public function appendToFile(params:Object,callback:Object,errorCallback:Object):Object;
	public function removeDir(params:Object,callback:Object,errorCallback:Object):Object;
	public function readFile(params:Object,callback:Object,errorCallback:Object):Object;
	public function getAttrs(params:Object,callback:Object,errorCallback:Object):Object;
	public function driveType(params:Object,callback:Object,errorCallback:Object):Object;
	public function createDir(params:Object,callback:Object,errorCallback:Object):Object;
	public function serialNumber(params:Object,callback:Object,errorCallback:Object):Object;
	public function readFileUTF16(params:Object,callback:Object,errorCallback:Object):Object;
	public function findFiles(params:Object,callback:Object,errorCallback:Object):Object;
	public function fileOpen(params:Object,callback:Object,errorCallback:Object):Object;
	public function dirList(params:Object,callback:Object,errorCallback:Object):Object;
	public function createShortcut(params:Object,callback:Object,errorCallback:Object):Object;
	public function writeToFile(params:Object,callback:Object,errorCallback:Object):Object;
	public function getFreeSpace(params:Object,callback:Object,errorCallback:Object):Object;
	public function dirExists(params:Object,callback:Object,errorCallback:Object):Object;
	public function renameDir(params:Object,callback:Object,errorCallback:Object):Object;
	public function getTimeStamp(params:Object,callback:Object,errorCallback:Object):Object;
	public function fileExists(params:Object,callback:Object,errorCallback:Object):Object;
	public function driveList(params:Object,callback:Object,errorCallback:Object):Object;
	public function appendToFileUTF16(params:Object,callback:Object,errorCallback:Object):Object;
	public function setAttrs(params:Object,callback:Object,errorCallback:Object):Object;
	public function fileList(params:Object,callback:Object,errorCallback:Object):Object;
	public function copyFile(params:Object,callback:Object,errorCallback:Object):Object;
	public function getFolder(params:Object,callback:Object,errorCallback:Object):Object;
	public function fileSave(params:Object,callback:Object,errorCallback:Object):Object;
	public function clearAttrs(params:Object,callback:Object,errorCallback:Object):Object;
	public function findInFiles(params:Object,callback:Object,errorCallback:Object):Object;
	public function copyFolder(params:Object,callback:Object,errorCallback:Object):Object;
	public function writeToFileUTF16(params:Object,callback:Object,errorCallback:Object):Object;
	public function fileSize(params:Object,callback:Object,errorCallback:Object):Object;
	public function explore(params:Object,callback:Object,errorCallback:Object):Object;
	public function deleteFile(params:Object,callback:Object,errorCallback:Object):Object;
	public function fileVer(params:Object,callback:Object,errorCallback:Object):Object;
	public function renameFile(params:Object,callback:Object,errorCallback:Object):Object;
}
