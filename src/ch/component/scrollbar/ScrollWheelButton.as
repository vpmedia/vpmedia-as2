/*Class	ScrollClickButtonPackage	ch.component.scrollbarProject	MainAPICreated by :	Tabin Cedric - thecaptainCreated at :	3 mai 2006*///importimport ch.component.scrollbar.ScrollBarManager;import ch.component.scrollbar.AbstractScrollBarManager;/** * Manager of a {@code ScrollBar}, depending on the mouse wheel. * <p>When an instance of this class is created, it automaticall register it * to the Mouse events, using <code>Mouse.addListener(this)</code> into the constructor. If * you want to unregister an instance from the Mouse events, just call the {@link #dispose()} method.</p> *  * @author		Tabin Cedric - thecaptain * @since		3 mai 2006 * @version		1.0 */class ch.component.scrollbar.ScrollWheelButton extends AbstractScrollBarManager implements ScrollBarManager{	//---------//	//Constants//	//---------//		//---------//	//Variables//	//---------//	private var _button:MovieClip;	/**	 * Scroll value.	 * <p>Determine the speed of the scroll when	 * the button is pressed.</p>	 * <p>If this value is {@code null}, then when the	 * {@link #onMouseWheel()} event will be called, the	 * delta will be used as the scroll value.</p>	 */	public var scrollValue:Number;		//-----------//	//Constructor//	//-----------//		/**	 * Create a new ScrollWheelButton.	 * <p>Note that if {@code scrollValue} is set to {@code null}, when the {@code onMouseWheel} event	 * will be called, the delta will be used for the scroll.</p>	 * 	 * @param	button		The clip to set as button.	 * @param	scrollValue	The value to scroll or {@code null}.	 * @throws	Error		If {@code button} is {@code null}.	 */	public function ScrollWheelButton(button:MovieClip, scrollValue:Number)	{		if (button == null) throw new Error(this+".<init> : button is not defined");				_button = button;		this.scrollValue = scrollValue;				//register the instance to receive the Mouse events		Mouse.addListener(this);	}		//--------------//	//Public methods//	//--------------//		/**	 * Get the button clip.	 * 	 * @return	The clip.	 */	public function getButton(Void):MovieClip	{		return _button;	}		/**	 * Set if the {@code ScrollWheelButton} is enabled or not.	 * <p>When the {@code ScrollWheelButton} is enabled, it is	 * registered within the {@code Mouse.addListener} method and	 * it will receive the events dispatched by the mouse. If you	 * set {@code false}, the {@code Mouse.removeListener} method	 * will be called.</p>	 * 	 * @param	value	{@code true} to enable the {@code ScrollWheelButton}, {@code false} otherwise.	 */	public function setEnabled(value:Boolean):Void	{		//register or unregister the events		if (value && !isEnabled()) Mouse.addListener(this);		else if (!value && isEnabled()) Mouse.removeListener(this);				//call the super method		super.setEnabled(value);	}		/**	 * Manage the scroll.	 * <p>This method is called by the Mouse when the onMouseWheel event	 * is performed. Note that if {@link #scrollValue} is {@code null}, the	 * {@code delta} will be used as the scroll value.</p>	 * 	 * @param	delta		A number indicating how many lines should be scrolled.	 * @param	target		A parameter that indicates the topmost movie clip instance under	 * 						the mouse pointer when the mouse wheel is rolled.	 */	public function onMouseWheel(delta:Number, target:MovieClip):Void	{		//target null, do nothing		if (target == null) return;				//check if the clip is in the scroll target		var current:MovieClip = target;		while (current != null)		{			//check if the current clip is the good one !			if (current == _button)			{				if (scrollValue == null) scroll(delta);				else scroll( (delta<0)?-scrollValue:scrollValue );								//stop here				return;			}						//update the current			current = current._parent;		}	}		/**	 * Represent the current instance into a String.	 *	 * @return	A String representing the ScrollWheelButton instance.	 */	public function toString(Void):String	{		return "ch.component.scrollbar.ScrollWheelButton";	}		//---------------//	//Private methods//	//---------------//}