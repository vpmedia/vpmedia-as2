/** * Abstract Radio Button Class * @author tPS * @version 1 **/import com.tPS.ui.form.*;import mx.events.EventDispatcher;class GenericRadioButton extends MovieClip implements IFormField{	//props	private var $label:TextField;	private var form:GenericForm;	private var $fieldID,$groupID,$tab:Number;	private var radioGroup:GenericRadioGroup;	private var enabled,isActive,isSelected,isRequired:Boolean;	//Implementation of the Event Dispatcher	function dispatchEvent() {	}	function addEventListener() {	}	function removeEventListener() {	}	//constructor	function GenericRadioButton(){		//EventDispatcher initialization		mx.events.EventDispatcher.initialize(this);		isActive = true;		enabled = true;		decorateFocusFunctions();	}	public function init($form:GenericForm,$group:GenericRadioGroup,$labelText:String,$isReq:Boolean,tabindex:Number,$isSelected:Boolean){		//form = $form;		radioGroup = $group;		$groupID = radioGroup.registerRadioButton(this);		$label.htmlText = $labelText;		//$fieldID = form.registerFormField(this);		if($isReq!=undefined){			isRequired = $isReq;		}else{			isRequired = false;		}		if($isSelected!=undefined){			isSelected = $isSelected;		}else{			isSelected = false;		}		$tab = tabindex;		this.tabIndex = $tab;	}	//methods	private function decorateFocusFunctions(Void):Void{		this.onSetFocus = function(){			this._parent.highlight(true);		}		this.onKillFocus = function(){			this._parent.highlight(false);		}		this.tabEnabled = true;	}	private function check(){	}	function validate():Boolean{		var isValid:Boolean = true;		return isValid;	}	function mark($dir:Boolean):Void{		if($dir){		}else{		}	}	function highlight($dir:Boolean):Void{		if($dir){		}else{		}	}	function getValue():Object{		return isSelected;	}		public function set _isSelected(t:Boolean){		isSelected = t;		check(isSelected);	}}