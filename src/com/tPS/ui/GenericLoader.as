/** * Coke usergen GenericLoader Manager * @author tPS * @version 1 **/import mx.utils.Delegate;import com.tPS.draw.Point;class com.tPS.ui.GenericLoader extends com.tPS.event.AeventSource {	//props	private var _rt:MovieClip;	private var loader_mc:MovieClip;	private var blendDelayInt:Number;		function GenericLoader($rt:MovieClip,$loaderClip:String, $pos:Point){		_rt = $rt;		initLoader($loaderClip, $pos);	}		private function initLoader($loaderClip:String, $pos:Point):Void{		loader_mc = _rt.attachMovie($loaderClip,"loader_mc"+_rt.getNextHighestDepth(),_rt.getNextHighestDepth());		loader_mc._x = ($pos) ? $pos.x : (Stage.width-loader_mc._width)*.5;		loader_mc._y = ($pos) ? $pos.y : (Stage.height-loader_mc.height)*.5;		AsBroadcaster.initialize(loader_mc);		loader_mc.addListener(this);		loader_mc.bar._xscale = 0;		//loader_mc.progress.text = 0 + "%";				showLoader();		//onShowLoader();	}		private function onShowLoader():Void{		loader_mc.play();		trace("reveal loader");		clearInterval(blendDelayInt);		delete blendDelayInt;	}		public function update():Void{		var perc:Number = Math.round(arguments[0]/arguments[1]*100);		loader_mc.bar._xscale = perc;		//loader_mc.progress.text = perc + "%";	}		public function showLoader():Void{		blendDelayInt = setInterval(Delegate.create(this,onShowLoader),500);	}		public function hideLoader():Void{		if(blendDelayInt != undefined){			clearInterval(blendDelayInt);			delete blendDelayInt;		}		loader_mc._visible = false;	}		public function remove():Void{		if(blendDelayInt != undefined){			clearInterval(blendDelayInt);			delete blendDelayInt;		}		//loader_mc.alphaTo(0,.4,"linear",0,onLoaderBlended);		loader_mc.gotoAndPlay("end");		loader_mc._visible = false;	}			public function onLoaderKilled():Void{		loader_mc.removeListener(this);		loader_mc.removeMovieClip();		broadcastMessage("onLoaderEnd");	}}