/** *  * @author tPS * @version 1 **/import com.tPS.tween.Thread;class com.tPS.tween.Translation extends com.tPS.event.AeventSource{		private var trgt:Object;	private var prnt:Object;	private var props,values,transValues,originValues:Array;	private var duration:Number;	private var callback:Function;	private var extra1:Number;	private var extra2:Number;	public var extras:Object;	private var t:Number;	private var easing:Function;	function Translation($obj:Object,$props:Array,$values:Array,$duration:Number,$easing:Function,$callback:Function,$prnt:Object,$extra1:Number,$extra2:Number,$extras:Object){		trgt = $obj;		prnt = $prnt;		props = $props; transValues = $values; originValues = [];		var i:Number = props.length;		while(--i > -1){			originValues[i] = trgt[props[i]];		}				values = [];					duration = $duration;		easing = $easing;		callback = $callback;		extra1 = $extra1;		extra2 = $extra2;				extras = $extras;				t=0;	}		private function begin(){		Thread.beginThread(this);		}		public function start(){		begin();	}		private function update(){		var i:Number = props.length;				while(--i > -1){			trgt[props[i]] = easing(t,originValues[i],transValues[i]-originValues[i],duration,extra1,extra2);		}				if(t == duration){			Thread.endThread(this);			if(callback){				callback(this);			}			broadcastMessage("onEnd",this);			kill();		}		++t;	}		private function deleteThread(){		Thread.endThread(this);		broadcastMessage("endThread");	}		public function kill(){		deleteThread();	}		public function get _parent():Object{		return prnt;	}}