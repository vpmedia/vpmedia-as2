/** * UiElement3D Class * @author	tPS * @version 1 **/import com.lo9ic.Quaternion;import com.tPS.threeD.iRenderable;import flash.filters.BlurFilter;import com.robertpenner.easing.*;class com.tPS.threeD.UiElement3D extends com.tPS.event.AeventSource implements iRenderable{	//props	private var homeClip:MovieClip;	private var blur:BlurFilter;	public var pivot,pos:Quaternion;	private var width:Number;	private var $id:Number;	private var isBlurred:Boolean;	private var trans:com.tPS.tween.Translation;		function UiElement3D($hc:MovieClip,$coords:Quaternion){		isBlurred = true;		homeClip = $hc;		homeClip.cacheAsBitmap = true;		pivot = $coords;		width = homeClip._width;				blur = new BlurFilter(0,0,2);		homeClip.filters = [blur];			//homeClip.blendMode = "lighten";		//homeClip.blendMode = "add";		//homeClip.blendMode = "	}	function set _pivot($coords:Quaternion){		pivot = $coords;	}	function translate($vector:Quaternion){		pivot.concat($vector);	}		function rotate(vector:Quaternion){		var $q1 = vector.copy();		$q1.invert();		var $q2 = new Quaternion();		$q2.fromPoint(pivot.x, pivot.y, pivot.z);		var $q3 = vector.copy();		$q2.concat($q1);				$q3.concat($q2);		pivot.fromPoint($q3.x,$q3.y,$q3.z);	}		public function set _visible($hidden:Boolean):Void{		trace("sscreen._visible = " + $hidden);		isBlurred = $hidden;		homeClip._visible = $hidden;	}	function render():Void{		//render	}	public function getClip(Void):MovieClip{		return homeClip;	}	public function move(xPos:Number,yPos:Number,$size:Number):Void{		homeClip._x = xPos;		homeClip._y = yPos;		homeClip._xscale = homeClip._yscale = $size;								//var blurInt:Number = (Math.abs(pivot.z)-100) /100;				var blurInt:Number = Math.round((10-(10-((Math.abs(pivot.z)-100) /20)))/4);				var bInt:Number = 0;		if(blurInt>0){			bInt = 2;			if(blurInt<16){				bInt = 16;				if(blurInt<8){					bInt = 8;					if(blurInt<4){						bInt = 4;						if(blurInt<2){							bInt = 2;						}					}				}			}		}				var fil:BlurFilter = blur		//fil.blurX = fil.blurY = bInt;		fil.blurX = fil.blurY = blurInt;				homeClip._alpha = Quint.easeOut(Math.abs(Math.round(pivot.z))-100,100,-90,1500);				homeClip.filters = (isBlurred)?[fil]:[];		//homeClip.filters = [null];	}	public function get _pivot():Quaternion{		return pivot;	}	public function get _width():Number{		return width;	}		public function set _id(aID:Number){		$id = aID;	}	public function get _id():Number{		return $id;	}	public function kill():Void{		homeClip.removeMovieClip();	}	public function enableBlur($blurred:Boolean):Void{		isBlurred = $blurred;	}}