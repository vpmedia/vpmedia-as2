/** * COKE ZERO Ngon * @author	tPS * @version 1 **/import com.tPS.draw.Shape;import com.tPS.draw.Point;import com.tPS.ui.util.DragItem; class com.tPS.draw.DragShape{ 	private var _rt:MovieClip;	private var shape_mc:MovieClip;	private var draggers_mc:MovieClip;	private var points:Array;	private var shape:Shape;	private var draggers:Array;		function DragShape($rt:MovieClip,$points:Array){		_rt = $rt;		shape_mc = _rt.createEmptyMovieClip("shape_mc",_rt.getNextHighestDepth());		draggers_mc = _rt.createEmptyMovieClip("draggers_mc",_rt.getNextHighestDepth());				points = $points;				draggers = [];				setup();	}		private function setup():Void{		var i:Number = points.length;		while(--i > -1){			var pnt_mc:MovieClip = draggers_mc.createEmptyMovieClip("dragger"+i,_rt.draggers_mc.getNextHighestDepth());			//var pnt_mc:MovieClip = draggers_mc.attachMovie("marker","dragger"+i,_rt.draggers_mc.getNextHighestDepth());			pnt_mc._x = points[i].x;			pnt_mc._y = points[i].y;			var pnt_shape:Shape = new Shape(pnt_mc);			var di:DragItem = new DragItem(pnt_mc);			di.addListener(this);			draggers.push(di);					}				shape = new Shape(shape_mc,points);	}		private function onUpdatePos($dragItem:DragItem,$point:Point):Void{		for(var i=0; i<draggers.length; i++){			points[i] = draggers[i]._pos;		}		shape._points = points;	}		function get _shape():MovieClip{		return shape_mc;	}		public function enable(isActive:Boolean):Void{		draggers_mc._visible = isActive;	}		public function toString():Void{		trace("Drag Shape: ");		var i:Number = -1;		while(++i < points.length){			points[i].toString();		}		trace("Drag Shape end");	}	}