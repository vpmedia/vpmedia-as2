/** * COKE ZERO Ngon * @author	tPS * @version 1 **/ class com.tPS.draw.ShapeRoundedSimple extends  com.tPS.draw.Shape{ 		function ShapeRoundedSimple($rt:MovieClip,$points:Array,$fs:Object,$ls:Object){		_rt = $rt;		_rt.clear();				points = ($points != undefined) ? $points : [[-5,-5],[5,-5],[5,5],[-5,5]]; 				fillStyle = ($fs != undefined) ? $fs : {type:"color",col:0xFFFFFF, alpha:100};		lineStyle = ($ls != undefined) ? $ls : {thickness:1, rgb:0xFFFFFF, alpha:10, pixelHinting:true, noScale:"none", capsStyle:"none", jointStyle:"miter", miterLimit:4};				render();	}		private function render():Void{		_rt.clear();				_rt.beginFill(fillStyle.col,fillStyle.alpha);				_rt.lineStyle(lineStyle.thickness,lineStyle.rgb,lineStyle.alpha,lineStyle.pixelHinting,lineStyle.noScale,lineStyle.capsStyle,lineStyle.jointStyle,lineStyle.miterLimit);				_rt.moveTo(points[0][0],points[0][1]);		var lastP:Array = [points[0][0],points[0][1]];				var i:Number = points.length;				while(--i > -1 ){			//_rt.lineTo(points[i][0],points[i][1]);			var cntr:Array = getCntrl(lastP,[points[i][0],points[i][1]]);			_rt.curveTo(cntr[0],cntr[1],points[i][0],points[i][1]);			lastP = [points[i][0],points[i][1]];		}		var cntr:Array = getCntrl(lastP,[points[0][0],points[0][1]]);		_rt.curveTo(cntr[0],cntr[1],points[0][0],points[0][1]);		_rt.endFill();	}		private function getCntrl(pt0:Array,pt1:Array,pt3:Array):Array{		var m:Number = compM(pt0,pt1);		var lastM:Number = compM(pt3,pt0);		var cntr:Array = [];		if(m!=0){			if(m>0){				//inc				if(lastM <= 0){					cntr[0] = pt0[0];					cntr[1] = pt1[1];				}else{					cntr[0] = pt1[0];					cntr[1] = pt0[1];				}			}else{				//dec				if(lastM <= 0){					cntr[0] = pt1[0];					cntr[1] = pt0[1];				}else{					cntr[0] = pt0[0];					cntr[1] = pt1[1];				}			}		}else{			cntr[0] = pt1[0];			cntr[1] = pt1[1];		}		return cntr;	}		private function compM(pt0:Array,pt1:Array):Number{		return (pt1[1] - pt0[1]) / (pt1[0] - pt0[0]);	}}