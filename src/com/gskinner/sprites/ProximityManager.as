/*sprites.ProximityManager by Grant Skinner, http://gskinner.com/You may distribute this class as long as you give appropriate credit, and this comment block remains intact.Visit gskinner.com for more Flash news, information, and source code.*/class com.gskinner.sprites.ProximityManager {// public properties:	public var gridSize:Number = 25;	// private properties:	private var mcs:Array;	private var pos:Array;	// initialization:	public function ProximityManager() {		mcs = [];		pos = [];	}	// public methods:	public function getNeighbours(p_mc:MovieClip):Array {		var x:Number = Math.ceil(p_mc._x/gridSize);		var y:Number = Math.ceil(p_mc._y/gridSize);				var p:Array = pos;		var r:Array = p[x][y];				if (p[x-1][y-1]) { r = r.concat(p[x-1][y-1]); }		if (p[x][y-1]) { r = r.concat(p[x][y-1]); }		if (p[x+1][y-1]) { r = r.concat(p[x+1][y-1]); }				if (p[x-1][y]) { r = r.concat(p[x-1][y]); }		if (p[x+1][y]) { r = r.concat(p[x+1][y]); }				if (p[x-1][y+1]) { r = r.concat(p[x-1][y+1]); }		if (p[x][y+1]) { r = r.concat(p[x][y+1]); }		if (p[x+1][y+1]) { r = r.concat(p[x+1][y+1]); }		return r;	}		public function addItem(p_mc:MovieClip):Void {		mcs.push(p_mc);	}		public function removeItem(p_mc:MovieClip):Void {		var i:Number = mcs.length;		while (i--) {			if (mcs[i] == p_mc) {				mcs.splice(i,1);				return;			}		}	}		public function refresh():Void {		// calculate grid positions:		var m:Array = mcs;		var p:Array = [];		var i:Number = m.length;		while (i--) {			var mc:MovieClip = mcs[i];			var x:Number = Math.ceil(mc._x/gridSize);			var y:Number = Math.ceil(mc._y/gridSize);			if (!p[x]) { p[x] = []; }			if (!p[x][y]) { p[x][y] = [mc]; continue; }			p[x][y].push(mc);		}		pos = p;	}}