/* 
 * Generated by ASDT 
 *
 * @author Carlos Rovira
 */
import mx.containers.Window;
import ResizeHandler;
class ResizeWindowTest {
	private var scopeRef:MovieClip;
	private var resizableWindow:Window;
	function ResizeWindowTest (scope:MovieClip) {
		scopeRef = scope;
		// --- The Window instance
		resizableWindow = scopeRef.createClassObject (Window, "resizableWindow", 0);
		// --- Sets Window min Width & Height
		resizableWindow.setMinWidth (80);
		resizableWindow.setMinHeight (80);
		// --- Create handlers for resizing
		createResizeHandlers (resizableWindow);
		// --- Layout window
		resizableWindow.setSize (200, 200);
		resizableWindow.move (Stage.width / 2 - resizableWindow.width / 2, Stage.height / 2 - resizableWindow.height / 2);
		// --- Use custom events like hideHandler to disable resizing
		//resizableWindow.dispatchEvent({type:"hideHandler"});
	}
	private function createResizeHandlers (resizableInstance:Window):Void {
		// --- Create all resize handlers
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.TL);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.T);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.TR);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.R);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.BR);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.B);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.BL);
		ResizeHandler.createResizeHandler (resizableInstance, ResizeHandler.L);
	}
	public static function main ():Void {
		var resizeWindowTest:ResizeWindowTest = new ResizeWindowTest (_root);
	}
}
